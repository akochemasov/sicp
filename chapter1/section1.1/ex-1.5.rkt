; Бен Битобор придумал тест для проверки интерпретатора на то, с каким порядком вычислений он работает, 
; аппликативным или нормальным. Бен определяет такие две процедуры:
(define (p) (p))
(define (test x y) (if (= x 0) 0 y))
; Затем он вычисляет выражение (test 0 (p)) 
; Какое поведение увидит Бен, если интерпретатор использует аппликативный порядок вычислений? 
; Какое поведение он увидит, если интерпретатор использует нормальный порядок?

; Ответ: 
; При аппликативном порядке вычислений сначала полностью вычисляются операнды, 
; а затем происходит вычисление процедуры с вычисленными значениями операндов. То есть при вычислении
(test 0 (p))
; прежде всего (до собственно выполнения операций из тела процедуры) нужно будет вычислить (p). 
; Но по хитрому определению для вычисления значения (p) необходимо вычислить… опять же (p). 
; Таким образом интерпретатор зацикливается.
; При нормальном порядке операнды вычисляются не сразу, а лишь по мере необходимости при использовании 
; в теле процедуры. Поэтому сначала вычисляется предикат if, он оказывается истинным и потому функция возвращает 0, 
; так и не столкнувшись с необходимостью вычислять (p).